name: Continuous Deployment

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    name: 'Build & push "${{ matrix.component.name }}" image'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        component:
          - name: "backend"
            context: "src/backend"
            file: "src/backend/prod.Dockerfile"

          - name: "entrypoint"
            context: "src/entrypoint"
            file: "src/entrypoint/Dockerfile"

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: arduino/setup-task@v2
      - name: Create common prefix for all image names
        run: echo "IMAGE_PREFIX=$(echo "ghcr.io/${{ github.repository_owner }}/deevenue-" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.IMAGE_PREFIX }}${{ matrix.component.name }}
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - run: task prod:build-frontend
        if: ${{ matrix.component.name == 'entrypoint' }}

      - uses: docker/build-push-action@v6
        name: 'Build & push "${{ matrix.component.name}}" docker image'
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.file }}
          push: true
          secrets: |
            "SENTRY_ORG=${{ secrets.SENTRY_ORG }}"
            "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}"
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
          tags: ${{ steps.meta.outputs.tags }}
  Deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Ping deployment to pull new images
        run: |
          curl -X POST -H 'Authorization: Bearer ${{ secrets.DEPLOYMENT_TOKEN }}' ${{ secrets.DEPLOYMENT_API_URL }}
  create-sentry-release:
    runs-on: ubuntu-latest
    name: "Create Sentry release"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
